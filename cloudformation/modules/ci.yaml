AWSTemplateFormatVersion: 2010-09-09
Parameters:
  env:
    Type: String
  bucket:
    Type: String
Resources:

  repo: 
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: !Sub "${env}-repository"

  project:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            pre_build:
              commands:
                - $(aws ecr get-login --no-include-email)
                - TAG="$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
                - IMAGE_URI="${REPOSITORY_URI}:${TAG}"
            build:
              commands:
                - docker build --tag "$IMAGE_URI" .
            post_build:
              commands:
                - docker push "$IMAGE_URI"
                - printf '[{"name":"%s-app","imageUri":"%s"}]' "$env" "$IMAGE_URI" > images.json
          artifacts:
            files: images.json
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:17.09.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${repo}
      Name: !Ref AWS::StackName
      ServiceRole:
        Fn::ImportValue:
          !Sub "${env}-taskrole"

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::ImportValue:
          !Sub "${env}-taskrole"
      ArtifactStore:
        Type: S3
        Location: !Ref bucket
      Stages:
        - Name: Source
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Provider: S3
                Owner: AWS
                Version: 1
              Configuration:
                S3Bucket: !Ref bucket
                S3ObjectKey: app/my-application.zip
              OutputArtifacts:
                - Name: App
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref project
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: ECS
              Configuration:
                ClusterName:
                  Fn::ImportValue:
                    !Sub "${env}-cluster"
                ServiceName:
                  Fn::ImportValue:
                    !Sub "${env}-service"
                FileName: images.json
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
